"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[429],{92003:function(t){t.exports=function({mustBeMetaMask:t=!1,silent:e=!1,timeout:i=3e3}={}){!function(){if("boolean"!==typeof t)throw new Error("@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.");if("boolean"!==typeof e)throw new Error("@metamask/detect-provider: Expected option 'silent' to be a boolean.");if("number"!==typeof i)throw new Error("@metamask/detect-provider: Expected option 'timeout' to be a number.")}();let n=!1;return new Promise((r=>{function s(){if(n)return;n=!0,window.removeEventListener("ethereum#initialized",s);const{ethereum:i}=window;if(!i||t&&!i.isMetaMask){const n=t&&i?"Non-MetaMask window.ethereum detected.":"Unable to detect window.ethereum.";!e&&console.error("@metamask/detect-provider:",n),r(null)}else r(i)}window.ethereum?s():(window.addEventListener("ethereum#initialized",s,{once:!0}),setTimeout((()=>{s()}),i))}))}},94429:function(t,e,i){i.r(e),i.d(e,{MetamaskAdapter:function(){return o}});var n=i(4942),r=i(92003),s=i.n(r),a=i(41436);class o extends a.J5{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),(0,n.Z)(this,"adapterNamespace",a.yk.EIP155),(0,n.Z)(this,"currentChainNamespace",a.EN.EIP155),(0,n.Z)(this,"type",a.hN.EXTERNAL),(0,n.Z)(this,"name",a.rW.METAMASK),(0,n.Z)(this,"status",a.MP.NOT_READY),(0,n.Z)(this,"rehydrated",!1),(0,n.Z)(this,"metamaskProvider",null),this.chainConfig=t.chainConfig}get provider(){return this.status===a.MP.CONNECTED&&this.metamaskProvider?this.metamaskProvider:null}set provider(t){throw new Error("Not implemented")}async init(t){if(super.checkInitializationRequirements(),this.metamaskProvider=await s()({mustBeMetaMask:!0}),!this.metamaskProvider)throw a.Ty.notInstalled("Metamask extension is not installed");this.status=a.MP.READY,this.emit(a.n2.READY,a.rW.METAMASK);try{t.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(e){this.emit(a.n2.ERRORED,e)}}setAdapterSettings(t){}async connect(){if(super.checkConnectionRequirements(),this.chainConfig||(this.chainConfig=(0,a.h2)(a.EN.EIP155,1)),this.status=a.MP.CONNECTING,this.emit(a.n2.CONNECTING,{adapter:a.rW.METAMASK}),!this.metamaskProvider)throw a.RM.notConnectedError("Not able to connect with metamask");try{await this.metamaskProvider.request({method:"eth_requestAccounts"});const{chainId:t}=this.metamaskProvider;if(t!==this.chainConfig.chainId&&await this.switchChain(this.chainConfig),this.status=a.MP.CONNECTED,!this.provider)throw a.RM.notConnectedError("Failed to connect with provider");return this.provider.once("disconnect",(()=>{this.disconnect()})),this.emit(a.n2.CONNECTED,{adapter:a.rW.METAMASK,reconnected:this.rehydrated}),this.provider}catch(t){throw this.status=a.MP.READY,this.rehydrated=!1,this.emit(a.n2.ERRORED,t),a.RM.connectionError("Failed to login with metamask wallet")}}async disconnect(){var t;let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};if(this.status!==a.MP.CONNECTED)throw a.RM.disconnectionError("Not connected with wallet");null===(t=this.provider)||void 0===t||t.removeAllListeners(),e.cleanup?(this.status=a.MP.NOT_READY,this.metamaskProvider=null):this.status=a.MP.READY,this.rehydrated=!1,this.emit(a.n2.DISCONNECTED)}async getUserInfo(){if(this.status!==a.MP.CONNECTED)throw a.RM.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async switchChain(t){if(!this.metamaskProvider)throw a.RM.notConnectedError("Not connected with wallet");try{await this.metamaskProvider.request({method:"wallet_switchEthereumChain",params:[{chainId:t.chainId}]})}catch(e){if(4902!==e.code)throw e;await this.metamaskProvider.request({method:"wallet_addEthereumChain",params:[{chainId:t.chainId,chainName:t.displayName,rpcUrls:[t.rpcTarget]}]})}}}}}]);